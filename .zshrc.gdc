PATH=$PATH:$HOME/Work/gooddata-cli/bin:$HOME/Work/gdc-client/tools/grizzly/bin

cdscripts() { cd $HOME/Work/gdc-client/html/scripts }

export GDC_NICKNAME='vj'
export GDC_ISSUE_PREFIX='cl'

gdc-remote() {
    git remote -v | \
        grep gooddata/gdc-client.git | \
        head -1 | \
        perl -ne 'print $1 if /([a-z]+)\s/i'
}

story-branch() {
	if [[ ! -n $1 ]]; then
		echo "Usage: story-branch [branch-name]"
		return
	fi

	branchName=$(echo "$1" | tr '[:upper:]' '[:lower:]')
	# add gd- prefix if [branch-name] is numeric
	branchName=$(echo $branchName | perl -ne 's/^([0-9]+)$/'$GDC_ISSUE_PREFIX'-$1/g; print')
	# add vj- prefix if [branch-name] does not start with it
	branchName=$(echo $branchName | perl -ne 's/^(?:'$GDC_NICKNAME'-)?(.*)/'$GDC_NICKNAME'-$1/; print $_')

	gdcRemote=$(gdc-remote)

	echo "Fetching \"$gdcRemote\" remote and creating branch \"$branchName\" from $gdcRemote/master"
	git fetch $gdcRemote
	git co -b $branchName $gdcRemote/master
}

last-commit-message() {
	git l --format='%s' -1
}

pull-request() {
	hub pull-request "$(last-commit-message)" $*
}

#function pull-request-magic {
#    local version=$(git rev-parse --abbrev-ref HEAD | perl -ne 'print $1 if /[0-9]+-([0-9]+)$/')
#    if [[ $version ]]; then
#        local branch="stable-$version"
#    else
#        local branch="master"
#    fi
#    echo $branch
#    #pull-request -b gooddata:
#}

winip() {
	ifconfig | grep 10\\\. | awk '/1/ {print $2}'
}

selenium-server() {
	java -jar ~/bin/selenium-server-standalone-2.33.0.jar -p 4444 2>&1 | tee server.log
}

crackpin() {
    pdfcrack -c 0123456789 -n 4 $*
}
